steps:
# Ingest API Container steps
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '-t'
    - '${_INGEST_API_IMAGE_NAME}'
    - '.'
  dir: ingest_api
- name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'push'
  - '${_INGEST_API_IMAGE_NAME}'
  dir: ingest_api
# Message Handler Container steps
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '-t'
    - '${_MESSAGE_HANDLER_IMAGE_NAME}'
    - '.'
  dir: message_handler
- name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'push'
  - '${_MESSAGE_HANDLER_IMAGE_NAME}'
  dir: message_handler
# RCS Metrics Handler Container steps
- name: 'gcr.io/cloud-builders/docker'
  args:
    - 'build'
    - '-t'
    - '${_RCS_METRICS_HANDLER_IMAGE_NAME}'
    - '.'
  dir: rcs_metrics_handler
- name: 'gcr.io/cloud-builders/docker'
  args: 
  - 'push'
  - '${_RCS_METRICS_HANDLER_IMAGE_NAME}'
  dir: rcs_metrics_handler
  # Terraform steps
- id: 'tf init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
    terraform init \
    -backend-config="bucket=$PROJECT_ID-tf-state" \
    -backend-config="prefix=streaming-data"
  dir: terraform
- id: 'tf apply'
  name: 'hashicorp/terraform:1.0.0'
  args: 
  - apply
  - -auto-approve
  dir: terraform
substitutions:
  _INGEST_API_IMAGE_NAME: us-central1-docker.pkg.dev/${PROJECT_ID}/docker-repo/gcp-ingest-api:${BUILD_ID}
  _MESSAGE_HANDLER_IMAGE_NAME: us-central1-docker.pkg.dev/${PROJECT_ID}/docker-repo/gcp-message-handler:${BUILD_ID}
  _RCS_METRICS_HANDLER_IMAGE_NAME: us-central1-docker.pkg.dev/${PROJECT_ID}/docker-repo/gcp-rcs-metrics-handler:${BUILD_ID}
options:
  dynamic_substitutions: true
  env:
    - TF_VAR_project_id=$PROJECT_ID
    - TF_VAR_ingest_api_tag=$BUILD_ID
    - TF_VAR_message_handler_tag=$BUILD_ID
    - TF_VAR_rcs_metrics_handler_tag=$BUILD_ID
tags:
  - terraform
  - streaming-data
  - plan-apply
images:
  - ${_INGEST_API_IMAGE_NAME}    
  - ${_MESSAGE_HANDLER_IMAGE_NAME} 
  - ${_RCS_METRICS_HANDLER_IMAGE_NAME} 
timeout: 3600s
